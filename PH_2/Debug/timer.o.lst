   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 1875              		.align	2
 1878              	switch_leds:
 1879 0000 00000000 		.space	4
 1880              		.global	timer2_num_int
 1881              		.align	2
 1884              	timer2_num_int:
 1885 0004 00000000 		.space	4
 1886              		.text
 1887              		.align	2
 1888              		.global	timer_ISR
 1890              	timer_ISR:
 1891              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    ****  * Fichero:		timer.c
   3:../timer.c    ****  * Autor:
   4:../timer.c    ****  * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer.c    ****  * Version:
   6:../timer.c    ****  *********************************************************************************************/
   7:../timer.c    **** 
   8:../timer.c    **** /*--- ficheros de cabecera ---*/
   9:../timer.c    **** #include "44b.h"
  10:../timer.c    **** #include "44blib.h"
  11:../timer.c    **** 
  12:../timer.c    **** /*--- variables globales ---*/
  13:../timer.c    **** int switch_leds = 0;
  14:../timer.c    **** int timer2_num_int = 0;
  15:../timer.c    **** 
  16:../timer.c    **** /*--- declaracion de funciones ---*/
  17:../timer.c    **** void timer_ISR(void) __attribute__((interrupt("IRQ")));
  18:../timer.c    **** void timer2_ISR(void) __attribute__((interrupt("IRQ")));
  19:../timer.c    **** void timer_init(void);
  20:../timer.c    **** void Timer2_Inicializar(void);
  21:../timer.c    **** void Timer2_Empezar(void);
  22:../timer.c    **** float Timer2_Leer(void);
  23:../timer.c    **** 
  24:../timer.c    **** /*--- codigo de las funciones ---*/
  25:../timer.c    **** void timer_ISR(void)
  26:../timer.c    **** {
 1892              		.loc 1 26 0
 1893              		.cfi_startproc
 1894              		@ Interrupt Service Routine.
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 1, uses_anonymous_args = 0
 1897 0000 04C02DE5 		str	ip, [sp, #-4]!
 1898 0004 0DC0A0E1 		mov	ip, sp
 1899              	.LCFI0:
 1900              		.cfi_def_cfa_register 12
 1901 0008 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 1902 000c 04B04CE2 		sub	fp, ip, #4
 1903              		.cfi_offset 14, -8
 1904              		.cfi_offset 13, -12
 1905              		.cfi_offset 11, -16
 1906              		.cfi_offset 3, -20
 1907              		.cfi_offset 2, -24
 1908              	.LCFI1:
 1909              		.cfi_def_cfa 11, 4
  27:../timer.c    **** 	switch_leds = 1;
 1910              		.loc 1 27 0
 1911 0010 28309FE5 		ldr	r3, .L2
 1912 0014 0120A0E3 		mov	r2, #1
 1913 0018 002083E5 		str	r2, [r3, #0]
  28:../timer.c    **** 
  29:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  30:../timer.c    **** 	rI_ISPC |= BIT_TIMER0; // BIT_TIMER0 está definido en 44b.h y pone un uno en el bit 13 que correpo
 1914              		.loc 1 30 0
 1915 001c 20309FE5 		ldr	r3, .L2+4
 1916 0020 1C209FE5 		ldr	r2, .L2+4
 1917 0024 002092E5 		ldr	r2, [r2, #0]
 1918 0028 022A82E3 		orr	r2, r2, #8192
 1919 002c 002083E5 		str	r2, [r3, #0]
  31:../timer.c    **** }
 1920              		.loc 1 31 0
 1921 0030 14D04BE2 		sub	sp, fp, #20
 1922 0034 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 1923 0038 04C09DE4 		ldmfd	sp!, {ip}
 1924 003c 04F05EE2 		subs	pc, lr, #4
 1925              	.L3:
 1926              		.align	2
 1927              	.L2:
 1928 0040 00000000 		.word	switch_leds
 1929 0044 2400E001 		.word	31457316
 1930              		.cfi_endproc
 1931              	.LFE0:
 1933              		.align	2
 1934              		.global	timer2_ISR
 1936              	timer2_ISR:
 1937              	.LFB1:
  32:../timer.c    **** 
  33:../timer.c    **** void timer2_ISR(void)
  34:../timer.c    **** {
 1938              		.loc 1 34 0
 1939              		.cfi_startproc
 1940              		@ Interrupt Service Routine.
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 1, uses_anonymous_args = 0
 1943 0048 04C02DE5 		str	ip, [sp, #-4]!
 1944 004c 0DC0A0E1 		mov	ip, sp
 1945              	.LCFI2:
 1946              		.cfi_def_cfa_register 12
 1947 0050 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 1948 0054 04B04CE2 		sub	fp, ip, #4
 1949              		.cfi_offset 14, -8
 1950              		.cfi_offset 13, -12
 1951              		.cfi_offset 11, -16
 1952              		.cfi_offset 3, -20
 1953              		.cfi_offset 2, -24
 1954              	.LCFI3:
 1955              		.cfi_def_cfa 11, 4
  35:../timer.c    **** 	timer2_num_int++;
 1956              		.loc 1 35 0
 1957 0058 30309FE5 		ldr	r3, .L5
 1958 005c 003093E5 		ldr	r3, [r3, #0]
 1959 0060 012083E2 		add	r2, r3, #1
 1960 0064 24309FE5 		ldr	r3, .L5
 1961 0068 002083E5 		str	r2, [r3, #0]
  36:../timer.c    **** 
  37:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  38:../timer.c    **** 	rI_ISPC |= BIT_TIMER2; // BIT_TIMER2 está definido en 44b.h y pone un uno en el bit 11 que correpo
 1962              		.loc 1 38 0
 1963 006c 20309FE5 		ldr	r3, .L5+4
 1964 0070 1C209FE5 		ldr	r2, .L5+4
 1965 0074 002092E5 		ldr	r2, [r2, #0]
 1966 0078 022B82E3 		orr	r2, r2, #2048
 1967 007c 002083E5 		str	r2, [r3, #0]
  39:../timer.c    **** }
 1968              		.loc 1 39 0
 1969 0080 14D04BE2 		sub	sp, fp, #20
 1970 0084 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 1971 0088 04C09DE4 		ldmfd	sp!, {ip}
 1972 008c 04F05EE2 		subs	pc, lr, #4
 1973              	.L6:
 1974              		.align	2
 1975              	.L5:
 1976 0090 00000000 		.word	timer2_num_int
 1977 0094 2400E001 		.word	31457316
 1978              		.cfi_endproc
 1979              	.LFE1:
 1981              		.align	2
 1982              		.global	timer_init
 1984              	timer_init:
 1985              	.LFB2:
  40:../timer.c    **** 
  41:../timer.c    **** void timer_init(void)
  42:../timer.c    **** {
 1986              		.loc 1 42 0
 1987              		.cfi_startproc
 1988              		@ Function supports interworking.
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991 0098 0DC0A0E1 		mov	ip, sp
 1992              	.LCFI4:
 1993              		.cfi_def_cfa_register 12
 1994 009c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1995 00a0 04B04CE2 		sub	fp, ip, #4
 1996              		.cfi_offset 14, -8
 1997              		.cfi_offset 13, -12
 1998              		.cfi_offset 11, -16
 1999              	.LCFI5:
 2000              		.cfi_def_cfa 11, 4
  43:../timer.c    **** 	/* Configuraion controlador de interrupciones */
  44:../timer.c    **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ
 2001              		.loc 1 44 0
 2002 00a4 84309FE5 		ldr	r3, .L8
 2003 00a8 0020A0E3 		mov	r2, #0
 2004 00ac 002083E5 		str	r2, [r3, #0]
  45:../timer.c    **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 2005              		.loc 1 45 0
 2006 00b0 1E36A0E3 		mov	r3, #31457280
 2007 00b4 0120A0E3 		mov	r2, #1
 2008 00b8 002083E5 		str	r2, [r3, #0]
  46:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER0); // Desenmascara Timer0 (BIT_TIMER0 están definido en 44b.h)
 2009              		.loc 1 46 0
 2010 00bc 70309FE5 		ldr	r3, .L8+4
 2011 00c0 6C209FE5 		ldr	r2, .L8+4
 2012 00c4 002092E5 		ldr	r2, [r2, #0]
 2013 00c8 022AC2E3 		bic	r2, r2, #8192
 2014 00cc 002083E5 		str	r2, [r3, #0]
  47:../timer.c    **** 
  48:../timer.c    **** 	/* Establece la rutina de servicio para TIMER0 */
  49:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
 2015              		.loc 1 49 0
 2016 00d0 60309FE5 		ldr	r3, .L8+8
 2017 00d4 60209FE5 		ldr	r2, .L8+12
 2018 00d8 002083E5 		str	r2, [r3, #0]
  50:../timer.c    **** 
  51:../timer.c    **** 	/* Configura el Timer0 */
  52:../timer.c    **** 	rTCFG0 = 255; // ajusta el preescalado
 2019              		.loc 1 52 0
 2020 00dc 5C309FE5 		ldr	r3, .L8+16
 2021 00e0 FF20A0E3 		mov	r2, #255
 2022 00e4 002083E5 		str	r2, [r3, #0]
  53:../timer.c    **** 	rTCFG1 = 0x0; // selecciona la entrada del mux que proporciona el reloj. La 00 corresponde a un di
 2023              		.loc 1 53 0
 2024 00e8 54309FE5 		ldr	r3, .L8+20
 2025 00ec 0020A0E3 		mov	r2, #0
 2026 00f0 002083E5 		str	r2, [r3, #0]
  54:../timer.c    **** 	rTCNTB0 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 2027              		.loc 1 54 0
 2028 00f4 4C309FE5 		ldr	r3, .L8+24
 2029 00f8 4C209FE5 		ldr	r2, .L8+28
 2030 00fc 002083E5 		str	r2, [r3, #0]
  55:../timer.c    **** 	rTCMPB0 = 12800;// valor de comparación
 2031              		.loc 1 55 0
 2032 0100 48309FE5 		ldr	r3, .L8+32
 2033 0104 322CA0E3 		mov	r2, #12800
 2034 0108 002083E5 		str	r2, [r3, #0]
  56:../timer.c    **** 
  57:../timer.c    **** 	/* establecer update=manual (bit 1) + inverter=on (¿? será inverter off un cero en el bit 2 pone e
  58:../timer.c    **** 	rTCON = 0x2;
 2035              		.loc 1 58 0
 2036 010c 40309FE5 		ldr	r3, .L8+36
 2037 0110 0220A0E3 		mov	r2, #2
 2038 0114 002083E5 		str	r2, [r3, #0]
  59:../timer.c    **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  60:../timer.c    **** 	rTCON = 0x09;
 2039              		.loc 1 60 0
 2040 0118 34309FE5 		ldr	r3, .L8+36
 2041 011c 0920A0E3 		mov	r2, #9
 2042 0120 002083E5 		str	r2, [r3, #0]
  61:../timer.c    **** }
 2043              		.loc 1 61 0
 2044 0124 0CD04BE2 		sub	sp, fp, #12
 2045 0128 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2046 012c 1EFF2FE1 		bx	lr
 2047              	.L9:
 2048              		.align	2
 2049              	.L8:
 2050 0130 0800E001 		.word	31457288
 2051 0134 0C00E001 		.word	31457292
 2052 0138 54FF7F0C 		.word	209715028
 2053 013c 00000000 		.word	timer_ISR
 2054 0140 0000D501 		.word	30736384
 2055 0144 0400D501 		.word	30736388
 2056 0148 0C00D501 		.word	30736396
 2057 014c FFFF0000 		.word	65535
 2058 0150 1000D501 		.word	30736400
 2059 0154 0800D501 		.word	30736392
 2060              		.cfi_endproc
 2061              	.LFE2:
 2063              		.align	2
 2064              		.global	Timer2_Inicializar
 2066              	Timer2_Inicializar:
 2067              	.LFB3:
  62:../timer.c    **** 
  63:../timer.c    **** /**
  64:../timer.c    ****  * configura el timer 2 para que trabaje a la
  65:../timer.c    ****  * máxima precisión posible.
  66:../timer.c    ****  */
  67:../timer.c    **** void Timer2_Inicializar(void)
  68:../timer.c    **** {
 2068              		.loc 1 68 0
 2069              		.cfi_startproc
 2070              		@ Function supports interworking.
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073 0158 0DC0A0E1 		mov	ip, sp
 2074              	.LCFI6:
 2075              		.cfi_def_cfa_register 12
 2076 015c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2077 0160 04B04CE2 		sub	fp, ip, #4
 2078              		.cfi_offset 14, -8
 2079              		.cfi_offset 13, -12
 2080              		.cfi_offset 11, -16
 2081              	.LCFI7:
 2082              		.cfi_def_cfa 11, 4
  69:../timer.c    **** 	/* Configuraion controlador de interrupciones */
  70:../timer.c    **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ
 2083              		.loc 1 70 0
 2084 0164 7C309FE5 		ldr	r3, .L11
 2085 0168 0020A0E3 		mov	r2, #0
 2086 016c 002083E5 		str	r2, [r3, #0]
  71:../timer.c    **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 2087              		.loc 1 71 0
 2088 0170 1E36A0E3 		mov	r3, #31457280
 2089 0174 0120A0E3 		mov	r2, #1
 2090 0178 002083E5 		str	r2, [r3, #0]
  72:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER2); // Desenmascara Timer2 (BIT_TIMER2 están definido en 44b.h)
 2091              		.loc 1 72 0
 2092 017c 68309FE5 		ldr	r3, .L11+4
 2093 0180 64209FE5 		ldr	r2, .L11+4
 2094 0184 002092E5 		ldr	r2, [r2, #0]
 2095 0188 022BC2E3 		bic	r2, r2, #2048
 2096 018c 002083E5 		str	r2, [r3, #0]
  73:../timer.c    **** 
  74:../timer.c    **** 	/* Establece la rutina de servicio para TIMER2 */
  75:../timer.c    **** 	pISR_TIMER2 = (unsigned) timer2_ISR;
 2097              		.loc 1 75 0
 2098 0190 58309FE5 		ldr	r3, .L11+8
 2099 0194 58209FE5 		ldr	r2, .L11+12
 2100 0198 002083E5 		str	r2, [r3, #0]
  76:../timer.c    **** 
  77:../timer.c    **** 	/* Configura el Timer2 */
  78:../timer.c    **** 	rTCFG0 &= ~0xFF00; // ajusta el preescalado
 2101              		.loc 1 78 0
 2102 019c 54309FE5 		ldr	r3, .L11+16
 2103 01a0 50209FE5 		ldr	r2, .L11+16
 2104 01a4 002092E5 		ldr	r2, [r2, #0]
 2105 01a8 FF2CC2E3 		bic	r2, r2, #65280
 2106 01ac 002083E5 		str	r2, [r3, #0]
  79:../timer.c    **** 	rTCFG1 &= ~0x0F00; // selecciona la entrada del mux que proporciona el reloj. La 00 corresponde a 
 2107              		.loc 1 79 0
 2108 01b0 44309FE5 		ldr	r3, .L11+20
 2109 01b4 40209FE5 		ldr	r2, .L11+20
 2110 01b8 002092E5 		ldr	r2, [r2, #0]
 2111 01bc 0F2CC2E3 		bic	r2, r2, #3840
 2112 01c0 002083E5 		str	r2, [r3, #0]
  80:../timer.c    **** 	rTCNTB2 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 2113              		.loc 1 80 0
 2114 01c4 34309FE5 		ldr	r3, .L11+24
 2115 01c8 34209FE5 		ldr	r2, .L11+28
 2116 01cc 002083E5 		str	r2, [r3, #0]
  81:../timer.c    **** 	rTCMPB2 = 0;// valor de comparación
 2117              		.loc 1 81 0
 2118 01d0 30309FE5 		ldr	r3, .L11+32
 2119 01d4 0020A0E3 		mov	r2, #0
 2120 01d8 002083E5 		str	r2, [r3, #0]
  82:../timer.c    **** 
  83:../timer.c    **** }
 2121              		.loc 1 83 0
 2122 01dc 0CD04BE2 		sub	sp, fp, #12
 2123 01e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2124 01e4 1EFF2FE1 		bx	lr
 2125              	.L12:
 2126              		.align	2
 2127              	.L11:
 2128 01e8 0800E001 		.word	31457288
 2129 01ec 0C00E001 		.word	31457292
 2130 01f0 4CFF7F0C 		.word	209715020
 2131 01f4 00000000 		.word	timer2_ISR
 2132 01f8 0000D501 		.word	30736384
 2133 01fc 0400D501 		.word	30736388
 2134 0200 2400D501 		.word	30736420
 2135 0204 FFFF0000 		.word	65535
 2136 0208 2800D501 		.word	30736424
 2137              		.cfi_endproc
 2138              	.LFE3:
 2140              		.align	2
 2141              		.global	Timer2_Empezar
 2143              	Timer2_Empezar:
 2144              	.LFB4:
  84:../timer.c    **** 
  85:../timer.c    **** /**
  86:../timer.c    ****  * reinicia la cuenta de tiempo (contador y la variable),
  87:../timer.c    ****  * y comienza a medir.
  88:../timer.c    ****  */
  89:../timer.c    **** void Timer2_Empezar(void)
  90:../timer.c    **** {
 2145              		.loc 1 90 0
 2146              		.cfi_startproc
 2147              		@ Function supports interworking.
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 1, uses_anonymous_args = 0
 2150 020c 0DC0A0E1 		mov	ip, sp
 2151              	.LCFI8:
 2152              		.cfi_def_cfa_register 12
 2153 0210 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2154 0214 04B04CE2 		sub	fp, ip, #4
 2155              		.cfi_offset 14, -8
 2156              		.cfi_offset 13, -12
 2157              		.cfi_offset 11, -16
 2158              	.LCFI9:
 2159              		.cfi_def_cfa 11, 4
  91:../timer.c    **** 	/* desactivar timer (bit 12) con auto-reload (bit 15)*/
  92:../timer.c    **** 	//rTCON &= ~(0x1001 << 12);
  93:../timer.c    **** 
  94:../timer.c    **** 	timer2_num_int = 0;
 2160              		.loc 1 94 0
 2161 0218 44309FE5 		ldr	r3, .L14
 2162 021c 0020A0E3 		mov	r2, #0
 2163 0220 002083E5 		str	r2, [r3, #0]
  95:../timer.c    **** 	rTCNTB2 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 2164              		.loc 1 95 0
 2165 0224 3C309FE5 		ldr	r3, .L14+4
 2166 0228 3C209FE5 		ldr	r2, .L14+8
 2167 022c 002083E5 		str	r2, [r3, #0]
  96:../timer.c    **** 
  97:../timer.c    **** 
  98:../timer.c    **** 	/* establecer update=manual (bit 13) + inverter=on (¿? será inverter off un cero en el bit 2 pone 
  99:../timer.c    **** 	rTCON |= 0x2000;
 2168              		.loc 1 99 0
 2169 0230 38309FE5 		ldr	r3, .L14+12
 2170 0234 34209FE5 		ldr	r2, .L14+12
 2171 0238 002092E5 		ldr	r2, [r2, #0]
 2172 023c 022A82E3 		orr	r2, r2, #8192
 2173 0240 002083E5 		str	r2, [r3, #0]
 100:../timer.c    **** 
 101:../timer.c    **** 	/* iniciar timer (bit 12) con auto-reload (bit 15)*/
 102:../timer.c    **** 	rTCON |= 0x9000;
 2174              		.loc 1 102 0
 2175 0244 24309FE5 		ldr	r3, .L14+12
 2176 0248 20209FE5 		ldr	r2, .L14+12
 2177 024c 002092E5 		ldr	r2, [r2, #0]
 2178 0250 092A82E3 		orr	r2, r2, #36864
 2179 0254 002083E5 		str	r2, [r3, #0]
 103:../timer.c    **** }
 2180              		.loc 1 103 0
 2181 0258 0CD04BE2 		sub	sp, fp, #12
 2182 025c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2183 0260 1EFF2FE1 		bx	lr
 2184              	.L15:
 2185              		.align	2
 2186              	.L14:
 2187 0264 00000000 		.word	timer2_num_int
 2188 0268 2400D501 		.word	30736420
 2189 026c FFFF0000 		.word	65535
 2190 0270 0800D501 		.word	30736392
 2191              		.cfi_endproc
 2192              	.LFE4:
 2194              		.global	__aeabi_ui2d
 2195              		.global	__aeabi_dmul
 2196              		.global	__aeabi_d2f
 2197              		.global	__aeabi_i2f
 2198              		.global	__aeabi_fmul
 2199              		.global	__aeabi_fadd
 2200              		.align	2
 2201              		.global	Timer2_Leer
 2203              	Timer2_Leer:
 2204              	.LFB5:
 104:../timer.c    **** 
 105:../timer.c    **** /**
 106:../timer.c    ****  * Lee la cuenta actual del temporizador y el número de
 107:../timer.c    ****  * interrupciones generadas, y devuelve el tiempo transcurrido en
 108:../timer.c    ****  * microsegundos.
 109:../timer.c    ****  *
 110:../timer.c    ****  * Cada tick = 0.030 us
 111:../timer.c    ****  * Cada interrupcion = (65535 * 0.030) us
 112:../timer.c    ****  *
 113:../timer.c    ****  */
 114:../timer.c    **** float Timer2_Leer(void)
 115:../timer.c    **** {
 2205              		.loc 1 115 0
 2206              		.cfi_startproc
 2207              		@ Function supports interworking.
 2208              		@ args = 0, pretend = 0, frame = 8
 2209              		@ frame_needed = 1, uses_anonymous_args = 0
 2210 0274 0DC0A0E1 		mov	ip, sp
 2211              	.LCFI10:
 2212              		.cfi_def_cfa_register 12
 2213 0278 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 2214 027c 04B04CE2 		sub	fp, ip, #4
 2215              		.cfi_offset 14, -8
 2216              		.cfi_offset 13, -12
 2217              		.cfi_offset 11, -16
 2218              		.cfi_offset 4, -20
 2219              	.LCFI11:
 2220              		.cfi_def_cfa 11, 4
 2221 0280 0CD04DE2 		sub	sp, sp, #12
 116:../timer.c    **** 	float tiempo_interr = (rTCNTB2 * 0.030);
 2222              		.loc 1 116 0
 2223 0284 E4309FE5 		ldr	r3, .L17+8
 2224 0288 003093E5 		ldr	r3, [r3, #0]
 2225 028c 0300A0E1 		mov	r0, r3
 2226 0290 FEFFFFEB 		bl	__aeabi_ui2d
 2227 0294 0030A0E1 		mov	r3, r0
 2228 0298 0140A0E1 		mov	r4, r1
 2229 029c 0300A0E1 		mov	r0, r3
 2230 02a0 0410A0E1 		mov	r1, r4
 2231 02a4 BC308FE2 		adr	r3, .L17
 2232 02a8 0C0093E8 		ldmia	r3, {r2-r3}
 2233 02ac FEFFFFEB 		bl	__aeabi_dmul
 2234 02b0 0030A0E1 		mov	r3, r0
 2235 02b4 0140A0E1 		mov	r4, r1
 2236 02b8 0300A0E1 		mov	r0, r3
 2237 02bc 0410A0E1 		mov	r1, r4
 2238 02c0 FEFFFFEB 		bl	__aeabi_d2f
 2239 02c4 0030A0E1 		mov	r3, r0
 2240 02c8 18300BE5 		str	r3, [fp, #-24]	@ float
 117:../timer.c    **** 	float tiempo_ticks = ((rTCNTB2 - rTCNTO2) * 0.030);
 2241              		.loc 1 117 0
 2242 02cc 9C309FE5 		ldr	r3, .L17+8
 2243 02d0 002093E5 		ldr	r2, [r3, #0]
 2244 02d4 98309FE5 		ldr	r3, .L17+12
 2245 02d8 003093E5 		ldr	r3, [r3, #0]
 2246 02dc 023063E0 		rsb	r3, r3, r2
 2247 02e0 0300A0E1 		mov	r0, r3
 2248 02e4 FEFFFFEB 		bl	__aeabi_ui2d
 2249 02e8 0030A0E1 		mov	r3, r0
 2250 02ec 0140A0E1 		mov	r4, r1
 2251 02f0 0300A0E1 		mov	r0, r3
 2252 02f4 0410A0E1 		mov	r1, r4
 2253 02f8 68308FE2 		adr	r3, .L17
 2254 02fc 0C0093E8 		ldmia	r3, {r2-r3}
 2255 0300 FEFFFFEB 		bl	__aeabi_dmul
 2256 0304 0030A0E1 		mov	r3, r0
 2257 0308 0140A0E1 		mov	r4, r1
 2258 030c 0300A0E1 		mov	r0, r3
 2259 0310 0410A0E1 		mov	r1, r4
 2260 0314 FEFFFFEB 		bl	__aeabi_d2f
 2261 0318 0030A0E1 		mov	r3, r0
 2262 031c 1C300BE5 		str	r3, [fp, #-28]	@ float
 118:../timer.c    **** 	return timer2_num_int * tiempo_interr + tiempo_ticks;
 2263              		.loc 1 118 0
 2264 0320 50309FE5 		ldr	r3, .L17+16
 2265 0324 003093E5 		ldr	r3, [r3, #0]
 2266 0328 0300A0E1 		mov	r0, r3
 2267 032c FEFFFFEB 		bl	__aeabi_i2f
 2268 0330 0030A0E1 		mov	r3, r0
 2269 0334 0300A0E1 		mov	r0, r3
 2270 0338 18101BE5 		ldr	r1, [fp, #-24]	@ float
 2271 033c FEFFFFEB 		bl	__aeabi_fmul
 2272 0340 0030A0E1 		mov	r3, r0
 2273 0344 0300A0E1 		mov	r0, r3
 2274 0348 1C101BE5 		ldr	r1, [fp, #-28]	@ float
 2275 034c FEFFFFEB 		bl	__aeabi_fadd
 2276 0350 0030A0E1 		mov	r3, r0
 119:../timer.c    **** }
 2277              		.loc 1 119 0
 2278 0354 0300A0E1 		mov	r0, r3
 2279 0358 10D04BE2 		sub	sp, fp, #16
 2280 035c 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 2281 0360 1EFF2FE1 		bx	lr
 2282              	.L18:
 2283 0364 0000A0E1 		.align	3
 2284              	.L17:
 2285 0368 B81E85EB 		.word	-343597384
 2286 036c 51B89E3F 		.word	1067366481
 2287 0370 2400D501 		.word	30736420
 2288 0374 2C00D501 		.word	30736428
 2289 0378 00000000 		.word	timer2_num_int
 2290              		.cfi_endproc
 2291              	.LFE5:
 2293              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1878   .bss:00000000 switch_leds
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1875   .bss:00000000 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1884   .bss:00000004 timer2_num_int
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1887   .text:00000000 $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1890   .text:00000000 timer_ISR
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1928   .text:00000040 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1933   .text:00000048 $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1936   .text:00000048 timer2_ISR
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1976   .text:00000090 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1981   .text:00000098 $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:1984   .text:00000098 timer_init
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2050   .text:00000130 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2063   .text:00000158 $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2066   .text:00000158 Timer2_Inicializar
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2128   .text:000001e8 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2140   .text:0000020c $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2143   .text:0000020c Timer2_Empezar
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2187   .text:00000264 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2200   .text:00000274 $a
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2203   .text:00000274 Timer2_Leer
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2285   .text:00000368 $d
                     .debug_frame:00000010 $d
C:\Users\a535621\AppData\Local\Temp\ccdDxfqm.s:2294   .text:0000037c $a

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2f
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
